name: Update Helm Documentation

on:
  schedule:
    # Run v3 daily at 2am Pacific (9am UTC)
    - cron: '0 9 * * *'
    # Run v2 daily at 3am Pacific (10am UTC)
    - cron: '0 10 * * *'
  workflow_dispatch: # Allow manual trigger
    inputs:
      version:
        description: 'Helm version to update (v2 or v3)'
        required: true
        default: 'v3'
        type: choice
        options:
          - v2
          - v3

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # pin@v5.1.0
        with:
          go-version-file: 'sdkexamples/go.mod'
          check-latest: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            # For scheduled runs, determine version based on time
            current_hour=$(date -u +%H)
            if [ "$current_hour" = "09" ]; then
              echo "version=v3" >> $GITHUB_OUTPUT
            elif [ "$current_hour" = "10" ]; then
              echo "version=v2" >> $GITHUB_OUTPUT
            else
              echo "version=v3" >> $GITHUB_OUTPUT  # fallback
            fi
          else
            # For manual runs, use the input
            echo "version=${{ inputs.version || 'v3' }}" >> $GITHUB_OUTPUT
          fi

      - name: Run periodic update
        run: make update-docs VERSION=${{ steps.version.outputs.version }}

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Check for existing PRs
        id: existing-pr
        run: |
          existing_pr=$(gh pr list --state open --author "github-actions[bot]" --head-match "update-docs-*" --json number --jq '.[0].number // empty')
          if [ -n "$existing_pr" ]; then
            echo "existing_pr=true" >> $GITHUB_OUTPUT
            echo "Existing PR #$existing_pr found, skipping creation"
          else
            echo "existing_pr=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true' && steps.existing-pr.outputs.existing_pr == 'false'
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # pin@v7.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update helm documentation for new releases"
          title: "chore: update helm documentation for new releases"
          body: |
            This is an automated pull request to update Helm documentation based on new releases.
            
            ## Changes
            This PR includes automatic updates for:
            - ✅ Version numbers in config.toml 
            - ✅ Go module dependencies in sdkexamples/go.mod
            - ✅ Regenerated CLI documentation (if applicable)
            
            ## Details
            The update process checked for new Helm releases and updated the documentation accordingly.
            Only non-pre-release versions are considered, and updates are made for new minor versions.
            
            Generated by the periodic update workflow at $(date).
            
            ## Review Notes
            Please verify that:
            - [ ] Version numbers are correct
            - [ ] Go dependencies are properly updated
            - [ ] CLI documentation is current
          branch: "update-docs-$(date +%Y%m%d-%H%M%S)"
          delete-branch: true
